#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

include /usr/share/quilt/quilt.make

CFLAGS = -Wall -g -D_REENTRANT

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O3
endif

UNALIGNED_ARCHS=i386 amd64
ifneq (,$(findstring $(DEB_HOST_ARCH), $(UNALIGNED_ARCHS)))
CFLAGS+=-DUNALIGNED_OK
endif

configure: configure-stamp
configure-stamp: debian/stamp-patched
	dh_testdir

	if [ ! -f Makefile.stash ]; then cp Makefile Makefile.stash ; fi

	AR="$(DEB_HOST_GNU_TYPE)-ar" CC="$(DEB_HOST_GNU_TYPE)-gcc" CFLAGS="$(CFLAGS)" uname=GNU ./configure --shared --prefix=/usr

	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	$(MAKE)
	$(MAKE) CC=$(DEB_HOST_GNU_TYPE)-gcc OPT="$(CFLAGS)" -C contrib/minizip

	touch $@

clean: unpatch
	dh_testdir
	dh_testroot

	$(MAKE) -C contrib/minizip clean
	$(MAKE) distclean

	rm -f build-stamp configure-stamp foo.gz 
	-mv Makefile.stash Makefile

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	$(MAKE) prefix=$(CURDIR)/debian/tmp/usr install

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	mkdir -p debian/tmp/usr/bin
	cp contrib/minizip/minizip debian/tmp/usr/bin
	dh_install -a --sourcedir=debian/tmp
	dh_link -a
	dh_strip -a --dbg-package=libz1-dbg
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: configure build clean binary-indep binary-arch binary install
